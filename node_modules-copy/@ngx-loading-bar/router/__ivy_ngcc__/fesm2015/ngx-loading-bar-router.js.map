{"version":3,"sources":["/home/rtorres/Documents/dev/prod/nobleCrmFront-End/node_modules/@ngx-loading-bar/router/fesm2015/ngx-loading-bar-router.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAkCC,4BAYC;;;;;;;;;;;;;;;;;;;;;2GAKA","file":"ngx-loading-bar-router.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';\nimport { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LoadingBarRouterModule {\n    /**\n     * @param {?} router\n     * @param {?} loadingBar\n     */\n    constructor(router, loadingBar) {\n        router.events.subscribe(event => {\n            /** @type {?} */\n            const state = this.getCurrentNavigationState(router);\n            if (state && state.ignoreLoadingBar) {\n                return;\n            }\n            if (event instanceof NavigationStart) {\n                loadingBar.start();\n            }\n            if ((event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel)) {\n                loadingBar.complete();\n            }\n        });\n    }\n    /**\n     * @private\n     * @param {?} router\n     * @return {?}\n     */\n    getCurrentNavigationState(router) {\n        // `getCurrentNavigation` only available in angular `7.2`\n        /** @type {?} */\n        const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n        if (currentNavigation && currentNavigation.extras) {\n            return currentNavigation.extras.state;\n        }\n        return {};\n    }\n}\nLoadingBarRouterModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    RouterModule,\n                    LoadingBarModule,\n                ],\n                exports: [\n                    RouterModule,\n                    LoadingBarModule,\n                ],\n            },] }\n];\n/** @nocollapse */\nLoadingBarRouterModule.ctorParameters = () => [\n    { type: Router },\n    { type: LoadingBarService }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { LoadingBarRouterModule };\n"]}